AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  poc

  SAM Template for poc

Parameters:
  BucketName:
    Type: String
    Default: 'swe-bucket-bugsbunny'
    Description: Enter desired S3 bucket name
  SNSScrapingToScoringName:
    Type: String
    Default: 'swe-sns-score'
    Description: Enter desired SNS topic name
  RegionName:
    Type: String
    Default: 'eu-central-1'
    Description: Enter region name
  DatabaseUser:
    Type: String
    Default: ''
    Description: Enter database user
  DatabasePassword:
    Type: String
    NoEcho: true
    Default: ''
    Description: Enter database password
  DatabaseHost:
    Type: String
    Default: ''
    Description: Enter database host
  DatabaseName:
    Type: String
    Default: ''
    Description: Enter database name
  InstaSessionTableName:
    Type: String
    Default: 'poc-instagram-sessions'
    Description: Enter instagram session table name

Globals:
  Function:
    Timeout: 60
    Runtime: python3.9
    Handler: function.app.lambda_handler
    Architectures:
      - x86_64
    Layers:
      - !Ref CommonLayer
      - !Ref DbLayer
    Environment:
      Variables:
        ENV_REGION_NAME:  !Ref RegionName
        # IMPORTANT: if running locally, set the following variables manually!
        ENV_BUCKET_NAME:  !Ref BucketName
        DB_USER:          !Ref DatabaseUser
        DB_PASSWORD:      !Ref DatabasePassword
        DB_HOST:          !Ref DatabaseHost
        DB_NAME:          !Ref DatabaseName

Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName

  SNSTopicS2S:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Ref SNSScrapingToScoringName
      FifoTopic: False
      
  CommonLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: common
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: makefile

  DbLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: db
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: makefile

  ScrapingServiceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: services/scraping/
      Environment:
        Variables:
          INSTA_USERNAME: 'NotABotBB1'
          INSTA_SESSIONS_TABLE: !Ref InstaSessionTableName
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref InstaSessionTableName
        - S3CrudPolicy:
            BucketName: !Ref BucketName

  ScoringServiceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: services/scoring/
      Policies:
        - ComprehendBasicAccessPolicy: {}
        - S3CrudPolicy: 
            BucketName: !Ref BucketName
        - Statement:
            Effect: Allow
            Action: sns:Subscribe
            Resource: !Ref SNSTopicS2S
      Events:
        SNSEvent:
          Type: SNS
          Properties:
            Topic: !Ref SNSTopicS2S

Outputs:
  ScrapingServiceFunction:
    Description: 'ScrapingService Lambda Function ARN'
    Value: !GetAtt ScrapingServiceFunction.Arn

  ScoringServiceFunction:
    Description: 'ScoringService Lambda Function ARN'
    Value: !GetAtt ScoringServiceFunction.Arn

