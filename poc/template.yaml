AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  poc

  SAM Template for poc

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    Runtime: python3.9
    Handler: lambda.app.lambda_handler
    Architectures:
      - x86_64

Resources:
  # HelloWorldFunction:
  #   Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
  #   Properties:
  #     CodeUri: hello_world/

  #     Events:
  #       HelloWorld:
  #         Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
  #         Properties:
  #           Path: /hello
  #           Method: get

#  RequestsHandlerFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      CodeUri: services/requests_handler/
#
#  ScoringServiceFunction:
#    Type: AWS::Serverless::Function
#    Properties:
#      CodeUri: services/scoring/

  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: swe-bucket-bugsbunny

  ScrapingServiceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: services/scraping/
      Environment:
        Variables:
          INSTA_USERNAME: ''
          INSTA_PASSWORD: ''
          INSTA_SESSIONS_TABLE: 'poc-instagram-sessions'

  ScoringServiceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: services/scoring/
      Policies:
        - ComprehendBasicAccessPolicy: {}
        - S3CrudPolicy: 
            BucketName: swe-bucket-bugsbunny
      Events:
        BucketEvent:
          Type: S3
          Properties:
            Bucket: 
              Ref: Bucket
            Events:
              s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                - Name: prefix
                  Value: 'comprehend/input/'
      

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  # HelloWorldApi:
  #   Description: 'API Gateway endpoint URL for Prod stage for Hello World function'
  #   Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/'
  # HelloWorldFunction:
  #   Description: 'Hello World Lambda Function ARN'
  #   Value: !GetAtt HelloWorldFunction.Arn
  # HelloWorldFunctionIamRole:
  #   Description: 'Implicit IAM Role created for Hello World function'
  #   Value: !GetAtt HelloWorldFunctionRole.Arn
#  RequestsHandlerFunction:
#    Description: 'RequestsHandler Lambda Function ARN'
#    Value: !GetAtt RequestsHandlerFunction.Arn
#
#  ScoringServiceFunction:
#    Description: 'ScoringService Lambda Function ARN'
#    Value: !GetAtt ScoringServiceFunction.Arn

  ScrapingServiceFunction:
    Description: 'ScrapingService Lambda Function ARN'
    Value: !GetAtt ScrapingServiceFunction.Arn

  ScoringServiceFunction:
    Description: 'ScoringService Lambda Function ARN'
    Value: !GetAtt ScoringServiceFunction.Arn

